---
- name: Wait 600 seconds for target connection to become reachable/usable
  wait_for_connection:

- name: Wait for any automatic services to kick off
  wait_for:
    timeout: 10

- name: APT LISTS - wait for the lock to be released
  raw: 'sudo lslocks -uo path | grep -E "^(PATH|/var/lib/apt/lists/lock)$"'
  register: result
  until: result.stdout|trim == "PATH"
  retries: 100
  delay: 5

- name: DPKG - wait for the lock to be released
  raw: 'sudo lslocks -uo path | grep -E "^(PATH|/var/lib/dpkg/lock|/var/lib/dpkg/lock-frontend)$"'
  register: result
  until: result.stdout|trim == "PATH"
  retries: 300
  delay: 5

- name: Gather facts
  setup:

# Metrics
- name: Install required system packages for ubuntu
  apt: name={{ item }} state=latest update_cache=yes
  loop:
    - gpg
  when: ansible_distribution == 'Ubuntu'

- name: Install required system packages for debian
  apt: name={{ item }} state=latest update_cache=yes
  loop:
    - gnupg
    - apt-transport-https
  when: ansible_distribution == 'Debian'

- name: Download Telegraf apt key
  apt_key:
    url: https://repos.influxdata.com/influxdb.key
    id:  2582E0C5
    state: present

- name: Add Telegraf repository
  apt_repository:
    repo: "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable"
    filename: telegraf
    state: present
    update_cache: no
    
- name: Install Telegraf
  apt:
    name: telegraf
    update_cache: yes
  notify: restart telegraf

- name: Set Telegraf config
  template:
    src:  templates/metrics/telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
  vars:
    hostname: "{{ inventory_hostname | regex_replace('.pintail') }}"
  notify: restart telegraf
