---
- hosts: metrics
  gather_facts: no
  vars:
    grafana_security:
      admin_user: admin
      admin_password: "{{ ADMIN_PASSWORD }}"

  handlers:
    - name: restart telegraf
      service:
        name: telegraf
        state: restarted
        enabled: yes
  
  pre_tasks:
    - name: Include Common
      include_tasks: common.yml

    # - name: Import InfluxDB GPG signing key
    #   apt_key: url=https://repos.influxdata.com/influxdb.key state=present
    
    # - name: Add InfluxDB repository
    #   apt_repository: repo='deb https://repos.influxdata.com/ubuntu trusty stable' state=present
    
    # - name: Install InfluxDB packages
    #   apt: name=influxdb state=present
    
    # - name: Modify InfluxDB hostname
    #   replace:
    #     dest:    /etc/influxdb/influxdb.conf
    #     regexp:  'hostname = "localhost"'
    #     replace: 'hostname = "{{ ansible_hostname }}"'
    #     backup:  yes
    
    # - name: Start the InfluxDB service
    #   service: name=influxdb state=restarted

    # - name: Wait for influxdb to come up
    #   wait_for:
    #     port:  8086
    #     delay: 1


    - name: Download Telegraf apt key
      apt_key:
        url: "https://repos.influxdata.com/influxdb.key"
        id: 2582E0C5
        state: present

    - name: Add Telegraf repository
      apt_repository:
        repo: "deb https://repos.influxdata.com/{{ ansible_distribution|lower }} {{ ansible_lsb.codename }} stable"
        filename: telegraf
        state: present

    - name: Set Telegraf config
      copy:
        src:  templates/metrics/telegraf.conf
        dest: /etc/telegraf/telegraf.conf
      notify: restart telegraf
    
    - name: Install Telegraf
      apt:
        name: telegraf
        update_cache: yes
      notify: restart telegraf

  roles:
    - role: heytrav.influxdb
    - role: cloudalchemy.grafana

  tasks:
    - name: Install required system packages
      apt:  name={{ item }} state=latest update_cache=yes
      loop:
        - python3
        - python3-pip

    - name: Install requests module
      pip: name={{ item }}
      loop:
        - requests
        - influxdb

    - name: Wait for influxdb to come up
      wait_for:
        port:  8086
        delay: 1

    - name: Create telegraf database
      influxdb_database:
        database_name: telegraf
        use_udp: no
        udp_port: 0
        port: 8086